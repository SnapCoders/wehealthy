# Set build image
FROM node:lts-alpine AS BUILD_IMAGE

# Update and install necessary libraries
RUN apk update && apk add curl bash && rm -rf /var/cache/apk/*

# Install node-prune
RUN curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /usr/local/bin

# Set directory
WORKDIR /usr/app

# Copy only package.json and yarn.lock files
COPY package.json yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy applicaton files
COPY src src
COPY .env.stg .env.stg
COPY tsconfig.json tsconfig.json
COPY ormconfig.ts ormconfig.js

# Building application
RUN yarn build

# Remove unecessary files after build
RUN rm -rf src && rm tsconfig.json

# Run Migrations
RUN yarn typeorm:stg

# Remove development dependencies
RUN npm prune --production

# Node prune
RUN /usr/local/bin/node-prune

# Set image
FROM node:lts-alpine

# Set directory
WORKDIR /usr/app

# Copy from build image
COPY --from=BUILD_IMAGE /usr/app/dist ./dist
COPY --from=BUILD_IMAGE /usr/app/node_modules ./node_modules
COPY --from=BUILD_IMAGE /usr/app/package.json ./package.json
COPY --from=BUILD_IMAGE /usr/app/.env.stg ./.env.stg

# Port to run
EXPOSE 2222

# Command to run application
CMD ["yarn", "stg"]
